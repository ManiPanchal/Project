<!DOCTYPE html>
<html>
<link rel="stylesheet"
  href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<style>
  h1 {
    text-align: center;
  }

  table {
    width: 70%;
    margin-left: 200px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 5px;
  }

  table,
  th,
  tr,
  td {
    border: 1px solid rgb(144, 222, 245);
    border-collapse: collapse;
  }

  td {
    text-align: center;
  }

  tr {
    height: 40px;
  }

  caption {
    font-weight: bold;
    font-size: 30px;
    color: green
  }

  /* Dropdown Button */
  .dropbtn {
    background-color: rgb(91, 200, 200);
    border-radius: 5px;
    padding: 16px;
    font-size: 16px;
    border: none;
    cursor: pointer;
    padding-bottom: 0;
  }

  /* Dropdown button on hover & focus */
  .dropbtn:hover,
  .dropbtn:focus {
    background-color: rgb(91, 200, 200);
  }

  /* The container <div> - needed to position the dropdown content */
  .dropdown {
    float: left;
    position: relative;
    left: 5px;
    /* display: inline-block; */


  }

  /* Dropdown Content (Hidden by Default) */
  .dropdown-content {
    display: none;
    position: absolute;
    background-color: #f1f1f1;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 1;
  }

  /* Links inside the dropdown */
  .dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
  }

  /* Change color of dropdown links on hover */
  .dropdown-content a:hover {
    background-color: #ddd;
  }

  /* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
  .show {
    display: block;
  }

  img {
    width: 40%;
    height: 20%
  }

  .btn {
    border-radius: 5px;
    /* width:10%; */
    text-decoration: none;
    color: black;
    border: none;
    background-color: rgb(91, 200, 200);
    font-size: 17px;
    padding: 12px;
    margin: 8px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    margin-left: 80px;
  }
</style>

<body>
  <div id="main">
    <div class="dropdown">
      <button onclick="myFunction()" class="dropbtn"><span class="material-symbols-outlined">
          list
        </span></p>
        <div id="myDropdown" class="dropdown-content">
          <!-- <a href="/changepassword">Change Password</a> -->
          <a href="/logout">Logout</a>
          <a href="/deleted">Rejected Products</a>
          <a href="/existing">Update Products</a>
          <a href="/seller">Add Products</a>
          <a href="/report">Orders Report</a>
        </div>
    </div>

    <h1>Welcome Seller</h1>
    <div id="Users">
      <table id="table">
        <caption>Orders Request</caption>
        <tr>
          <th>Image</th>
          <th>Product Id</th>
          <th>Quantity</th>
          <th>User email</th>
          <th>Option</th>
        </tr>
      </table>
    </div>
    <div id="already">
      <table id="table2">
        <caption>Dispatched Products</caption>
        <tr>
          <th>Image</th>
          <th>Product Id</th>
          <th>Quantity</th>
          <th>User email</th>
          <th>State</th>
        </tr>
      </table>
    </div>
</body>
<script>
  function myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
  }

  // Close the dropdown menu if the user clicks outside of it
  window.onclick = function (event) {
    if (!event.target.matches('.material-symbols-outlined',)) {
      var dropdowns = document.getElementsByClassName("dropdown-content");
      var i;
      for (i = 0; i < dropdowns.length; i++) {
        var openDropdown = dropdowns[i];
        if (openDropdown.classList.contains('show')) {
          openDropdown.classList.remove('show');
        }
      }
    }
  }
  const request = new XMLHttpRequest();
  request.open("POST", "/postorderrequest");
  request.setRequestHeader("content-type", "application/json");
  request.send();
  request.addEventListener("load", () => {
    // console.log(request.responseText);
    let data = JSON.parse(request.responseText);
    for (let i = 0; i < data.length; i++) {
      if (data[i].state == "Ordered") {
        let table = document.getElementById("table");
        let row = document.createElement("tr");
        let cell1 = document.createElement("td");
        cell1.style.width = "10%";
        let img = document.createElement("img");
        let img1 = data[i].image;
        img.setAttribute("src", `profile/${img1}`);
        // item.appendChild(img);

        cell1.appendChild(img);
        row.appendChild(cell1);
        let cell2 = document.createElement("td");
        cell2.innerHTML = data[i].product_id;
        row.appendChild(cell2);
        let cell3 = document.createElement("td");
        cell3.innerHTML = data[i].quantity;
        row.appendChild(cell3);
        let cell5 = document.createElement("td");
        cell5.innerHTML = data[i].email;
        row.appendChild(cell5);
        let cell4 = document.createElement("td");
        let bn = document.createElement("input");
        bn.setAttribute("type", "button");
        bn.setAttribute("class", "btn");
        bn.value = "Dispatch";
        cell4.appendChild(bn);
        bn.addEventListener("click", dispatch);
        cell4.style.width = "10%";
        row.appendChild(cell4);
        table.appendChild(row);
      }
      else {
        let table2 = document.getElementById("table2");
        let row = document.createElement("tr");
        let cell1 = document.createElement("td");
        cell1.style.width = "10%";
        let img = document.createElement("img");
        let img1 = data[i].image;
        img.setAttribute("src", `profile/${img1}`);
        // item.appendChild(img);

        cell1.appendChild(img);
        row.appendChild(cell1);
        let cell2 = document.createElement("td");
        cell2.innerHTML = data[i].product_id;
        row.appendChild(cell2);
        let cell3 = document.createElement("td");
        cell3.innerHTML = data[i].quantity;
        row.appendChild(cell3);
        let cell5 = document.createElement("td");
        cell5.innerHTML = data[i].email;
        row.appendChild(cell5);
        let cell4 = document.createElement("td");
        cell4.innerHTML = data[i].state;
        //  let bn=document.createElement("input");
        //  bn.setAttribute("type","button");
        //  bn.setAttribute("class","btn");
        //  bn.value="Dispatch";
        //  cell4.appendChild(bn);
        //  bn.addEventListener("click",dispatch);
        //  cell4.style.width="10%";
        row.appendChild(cell4);
        table2.appendChild(row);
      }
    }
    function dispatch(e) {
      // console.log(e.target.parentNode.parentNode.getElementsByTagName("td")[1].innerHTML);
      let id = e.target.parentNode.parentNode.getElementsByTagName("td")[1].innerHTML;
      let email = e.target.parentNode.parentNode.getElementsByTagName("td")[3].innerHTML;
      const request = new XMLHttpRequest();
      request.open("POST", "/dispatchseller");
      request.setRequestHeader("content-type", "application/json");
      request.send(JSON.stringify({ id: id, email: email }));
      request.addEventListener("load", () => {
        if (request.responseText == "ok") {
          swal({
            title: "Product Dispatched Successfully",
            icon: "success"
          })
          // e.target.parentNode.parentNode.remove();
          e.target.style.backgroundColor = "orange";
          e.target.disabled = true;
          e.target.value = "Dispatched";
        }
      })
    }
  })
</script>

</html>