<!DOCTYPE html>
<html>
<link rel="stylesheet" href="./addproducts.css">
<link rel="stylesheet"
  href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<body>
  <div class="dropdown">
    <button onclick="myFunction()" class="dropbtn"><span class="material-symbols-outlined">
        list
      </span></p>
      <div id="myDropdown" class="dropdown-content">
        <!-- <a href="/changepassword">Change Password</a> -->
        <a href="/logout">Logout</a>
        <a href="/deleted">Rejected Products</a>
        <a href="/seller">Add Products</a>
        <a href="/orderrequest">Orders</a>
        <a href="/report">Orders Report</a>
      </div>
  </div>
  <h1>Welcome Seller</h1>
  <div id="second"></div>
</body>
<script>
  function myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
  }

  // Close the dropdown menu if the user clicks outside of it
  window.onclick = function (event) {
    if (!event.target.matches('.material-symbols-outlined',)) {
      var dropdowns = document.getElementsByClassName("dropdown-content");
      var i;
      for (i = 0; i < dropdowns.length; i++) {
        var openDropdown = dropdowns[i];
        if (openDropdown.classList.contains('show')) {
          openDropdown.classList.remove('show');
        }
      }
    }
  }



  const request = new XMLHttpRequest();
  request.open("GET", "/admin_products");
  request.send();
  request.addEventListener("load", () => {
    const data = JSON.parse(request.responseText);
    load_item(data);
    function load_item(data) {
      for (let i = 0; i < data.length; i++) {
        if (data[i].flag == "A") {


          let br = document.createElement("br");
          let product = document.getElementById("second");
          let item = document.createElement("div");
          item.setAttribute("class", "img_div");
          item.setAttribute("id", data[i].product_id);
          let img = document.createElement("img");
          let img1 = data[i].image;
          img.setAttribute("src", `profile/${img1}`);
          item.appendChild(img);
          img.appendChild(br);
          let l1 = document.createElement("label");
          l1.innerHTML = "Product Name:";
          item.appendChild(l1)
          let i1 = document.createElement("input");
          i1.setAttribute("type", "text");
          i1.value = data[i].productname;
          // i1.addEventListener("keyup",able);
          item.appendChild(i1);
          let l2 = document.createElement("label");
          l2.innerHTML = "Discription:";
          item.appendChild(l2);
          let i2 = document.createElement("input");
          i2.setAttribute("type", "text");
          i2.value = data[i].details;
          item.appendChild(i2);
          let l3 = document.createElement("label");

          l3.innerHTML = "Product Price:";
          item.appendChild(l3);
          let i3 = document.createElement("input");
          i3.setAttribute("type", "text");
          i3.value = data[i].price;
          item.appendChild(i3);
          let l4 = document.createElement("label");
          l4.innerHTML = "Product Quantity:";
          item.appendChild(l4);
          let i4 = document.createElement("input");
          i4.setAttribute("type", "text");
          i4.value = data[i].quantity;
          item.appendChild(i4);
          // i4.appendChild(br);
          // i4.appendChild(br);
          let divbtn = document.createElement("div");
          divbtn.setAttribute("class", "btn2");
          let update = document.createElement("input");
          update.setAttribute("type", "submit");
          update.setAttribute("value", "Update");
          update.setAttribute("class", "btn");
          // update.setAttribute("disabled",true);
          // update.style.backgroundColor="rgb(91, 200, 200,0.2)"
          divbtn.appendChild(update);
          update.addEventListener("click", fun_update);
          let del = document.createElement("input");
          del.setAttribute("type", "submit");
          del.setAttribute("value", "Delete");
          del.setAttribute("class", "btn");
          divbtn.appendChild(del);
          item.appendChild(divbtn);
          del.addEventListener("click", fun_del);
          second.appendChild(item);
        }
      }
    }
    function fun_del(e) {
      e.target.parentNode.parentNode.remove();
      const request = new XMLHttpRequest();
      request.open("POST", "/deleteproduct");
      request.setRequestHeader("Content-Type", "application/json");
      request.send(JSON.stringify({ id: e.target.parentNode.parentNode.id }));
      request.addEventListener("load", () => {
        if (request.responseText == "ok") {
          swal({
            title: "Item deleted successfully",
            icon: "success"
          })
        }
      })
    }
    function fun_update(e) {
      //   console.log(e.target.parentNode.parentNode.id);
      let inputs = e.target.parentNode.parentNode.getElementsByTagName("input");
      let input1 = inputs[0].value;
      let input2 = inputs[1].value;
      let input3 = inputs[2].value;
      let input4 = inputs[3].value;
      const request = new XMLHttpRequest();
      request.open("POST", "/updateproduct");
      request.setRequestHeader("Content-Type", "application/json");
      request.send(JSON.stringify({ id: e.target.parentNode.parentNode.id, productname: input1, discription: input2, price: input3, quantity: input4 }));
      request.addEventListener("load", () => {
        if (request.responseText == "ok") {
          swal({
            title: "Item Updated successfully",
            icon: "success"
          })
        }

      })
    }
  });


</script>

</html>